{"version":3,"file":"static/js/880.d69b9044.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","pages/MovieDetails.jsx","pages/NotFound.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_details_page\":\"MovieDetailsPage_movie_details_page__Zc99d\",\"img_wrapper\":\"MovieDetailsPage_img_wrapper__NojKV\",\"movie_title\":\"MovieDetailsPage_movie_title__G7p8j\",\"user_score\":\"MovieDetailsPage_user_score__Hy9yc\",\"span\":\"MovieDetailsPage_span__6j39O\",\"overview\":\"MovieDetailsPage_overview__Q2W8b\",\"movie_overview\":\"MovieDetailsPage_movie_overview__NtmA5\",\"genres\":\"MovieDetailsPage_genres__HV3uS\",\"genres_text\":\"MovieDetailsPage_genres_text__eTS5g\"};","import PropTypes from 'prop-types';\nimport s from './MovieDetailsPage.module.css';\n\nexport default function MovieDetailsPage({ movie }) {\n    const { poster_path, title, release_date, vote_average, overview, genres } = movie;\n\n    return (\n        <div className={s.movie_details_page}>\n            <div className={s.img_wrapper}>\n                <img\n                    src={`https://image.tmdb.org/t/p/w400/${poster_path}`}\n                    alt={title}\n                    width=\"400px\" />\n            </div>\n\n            <div>\n                <h2 className={s.movie_title}>{title} ({release_date.slice(0, 4)})</h2>\n                <p className={s.user_score}>User score: <span className={s.span}>{vote_average * 10}%</span></p>\n                <h3 className={s.overview}>Overview</h3>\n                <p className={s.movie_overview}>{overview}</p>\n                <h3 className={s.genres}>Genres</h3>\n                <p className={s.genres_text}>{genres.map(movie =>\n                    movie.name).join(', ')}</p>\n                \n            </div>\n        </div> \n    );\n};\n\nMovieDetailsPage.propTypes = {\n    movie: PropTypes.shape({\n    poster_path: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n        PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        })\n    ),\n    }),\n};","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, Link,  useLocation, Outlet } from \"react-router-dom\";\nimport { getMovieDetails } from \"services/API\";\nimport MovieDetailsPage from \"components/MovieDetailsPage/MovieDetailsPage\";\nimport NotFound from \"./NotFound\";\n\nexport default function MovieDetails() {\n    const [movie, setMovie] = useState(null);\n    \n    const { movieId } = useParams();\n    \n    const location = useLocation();\n\n    useEffect(() => {\n        getMovieDetails(movieId).then(response => {\n            setMovie(response.data);\n        });\n    }, [movieId]);\n\n    const path = location?.state?.from ?? '/';\n\n    const button = {\n        cursor: 'pointer',\n        padding: \"7px\",\n        borderRadius: \"5px\",\n        backgroundColor: \"#2196f3\",\n        border: \"none\",\n    }\n\n    return (\n        <>\n            <Link to={path}><button style={button}>Go back</button></Link>\n            {!movie && <NotFound />}\n            {movie && <MovieDetailsPage movie={movie} />}\n            {movie && \n                <>\n                    <hr />\n            <h3 className=\"additional_title\">Additional information</h3>\n            <ul className=\"additional_information\">\n                <li >\n                    <Link className='additional_item' to=\"cast\" state={{from: path}}>Cast</Link>\n                </li>\n                <li >\n                    <Link className='additional_item' to=\"reviews\" state={{from: path}}>Reviews</Link>\n                </li>\n            </ul>\n                    <hr />\n                </>\n            }\n            \n            <Suspense>\n                <Outlet/>\n            </Suspense>\n        </>\n    );\n}","export default function NotFound() {\n    return <h1>404 Page not found</h1>\n}","import axios from \"axios\";\n\nconst API_KEY = 'c20f2af9e3efd6f7ff4fb5feff25f58d';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport async function getTrending() {\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport async function getSearchMovies(titleMovies) {\n    return await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${titleMovies}&page=1`\n    );\n};\n\nexport async function getMovieDetails(movie_id) {\n    return await axios.get(\n        `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n    );\n};\n\nexport async function getMovieCredits(movie_id) {\n    return await axios.get(`${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`);\n};\n\nexport async function getMovieReviews(movie_id) {\n    return await axios.get(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n};"],"names":["MovieDetailsPage","movie","poster_path","title","release_date","vote_average","overview","genres","className","s","src","alt","width","slice","map","name","join","MovieDetails","useState","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieDetails","then","response","data","path","state","from","to","style","cursor","padding","borderRadius","backgroundColor","border","NotFound","Suspense","API_KEY","BASE_URL","getTrending","axios","getSearchMovies","titleMovies","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}