{"version":3,"file":"static/js/631.3f7a0bb0.chunk.js","mappings":"iPAGe,SAASA,EAAT,GAA0C,IAAdC,EAAa,EAAbA,WACjCC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,wBACKF,EAAWG,KAAI,SAAAC,GAAI,OAChB,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,SACKG,EAAKK,SAFLL,EAAKE,SCJf,SAASI,IACpB,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCL,EAAAA,EAAAA,UAAS,MAA7C,eAAOX,EAAP,KAAmBiB,EAAnB,KAEMC,EAAQH,EAAaI,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACQ,OAAVF,IACAL,EAAeK,IACfG,EAAAA,EAAAA,IAAgBH,GAAOI,MAAK,SAAAC,GACxBN,EAAcM,EAASC,KAAKC,eAKrC,CAACP,IAoCJ,OACI,iCACI,kBAAMQ,SAhCO,SAAAC,GAKrB,GAJIA,EAAMC,iBAImB,KAFIhB,EAAYiB,OAAOC,cAGhD,OAAOC,MAAM,qIAGjBf,EAAgB,SAAD,OAAUJ,KAEzBS,EAAAA,EAAAA,IAAgBT,GAAaU,MAAK,SAAAC,GAC1BN,EAAcM,EAASC,KAAKC,aAoB5B,WACI,kBACIO,MAlBF,CACVC,QAAS,MACTC,MAAO,IACPC,aAAc,OAgBFC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,cACLC,MAAO7B,EACP8B,SA7CS,SAACf,GACtBd,EAAec,EAAMgB,cAAcF,WA6C3B,mBAAQL,KAAK,SAASJ,MApBnB,CACXC,QAAS,MACTE,aAAc,MACdS,gBAAiB,UACjBC,OAAQ,OACRC,OAAQ,WAeA,wBAEJ,yBAAM9C,IAAc,SAACD,EAAD,CAAkBC,WAAYA,W,0MCrExD+C,EAAU,mCACVC,EAAQ,+BAEP,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,8FACUC,IAAAA,IAAA,UAAaF,EAAb,uCAAoDD,IAD9D,0GAIA,SAAe1B,EAAtB,+CAAO,OAAP,oBAAO,WAA+B8B,GAA/B,iFACUD,IAAAA,IAAA,UACNF,EADM,iCAC2BD,EAD3B,kBAC4CI,EAD5C,YADV,0GAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,iFACUH,IAAAA,IAAA,UACNF,EADM,kBACYK,EADZ,oBACgCN,EADhC,oBADV,0GAMA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,iFACUH,IAAAA,IAAA,UAAaF,EAAb,kBAA+BK,EAA/B,4BAA2DN,EAA3D,oBADV,0GAIA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,iFACUH,IAAAA,IAAA,UAAaF,EAAb,kBAA+BK,EAA/B,4BAA2DN,EAA3D,2BADV","sources":["components/MoviesSearchPage/MoviesSearchPage.jsx","pages/Movies.jsx","services/API.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useLocation, Link } from \"react-router-dom\";\n\nexport default function MoviesSearchPage({ moviesList}) {\n    const location = useLocation();\n\n    return (\n        <ul>\n            {moviesList.map(item => (\n                <li key={item.id}>\n                    <Link to={`/movies/${item.id}`} state={{ from: location }}>\n                        {item.title}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nMoviesSearchPage.propTypes = {\n    moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n    })\n    ),\n};","import { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getSearchMovies } from \"services/API\";\nimport MoviesSearchPage from \"components/MoviesSearchPage/MoviesSearchPage\";\n\nexport default function Movies() {\n    const [searchQuery, setSearchQuery] = useState('');\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [moviesList, setMoviesList] = useState(null);\n\n    const query = searchParams.get('query');\n\n    useEffect(() => {\n        if (query !== null) {\n            setSearchQuery(query);\n            getSearchMovies(query).then(response => {\n                setMoviesList(response.data.results);\n            });\n        }\n\n        \n    }, [query]);\n    \n    const handleNameChange = (event) => {\n        setSearchQuery(event.currentTarget.value);\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const normalizeSearchQuery = searchQuery.trim().toLowerCase();\n\n    if (normalizeSearchQuery === '') {\n        return alert('Введіть пошуковий запит.');\n        }\n        \n    setSearchParams(`query=${searchQuery}`);\n\n    getSearchMovies(searchQuery).then(response => {\n            setMoviesList(response.data.results);\n    });\n        \n    }\n    const input = {\n        padding: \"5px\",\n        width: 250,\n        borderRadius: \"5px\",\n    }\n\n    const button = {\n        padding: \"7px\",\n        borderRadius: \"5px\",\n        backgroundColor: \"#2196f3\",\n        border: \"none\",\n        cursor: \"pointer\",\n    }\n\n    return (\n        <>\n            <form onSubmit={handleSubmit}>\n                <input\n                    style={input}\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder=\"Search movies\"\n                    name='searchQuery'\n                    value={searchQuery}\n                    onChange={handleNameChange} />\n                <button type=\"submit\" style={button}>Search</button>\n            </form>\n            <div>{moviesList && <MoviesSearchPage moviesList={moviesList} />}</div>\n        </>\n    );\n};","import axios from \"axios\";\n\nconst API_KEY = 'c20f2af9e3efd6f7ff4fb5feff25f58d';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport async function getTrending() {\n    return await axios.get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n};\n\nexport async function getSearchMovies(titleMovies) {\n    return await axios.get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${titleMovies}&page=1`\n    );\n};\n\nexport async function getMovieDetails(movie_id) {\n    return await axios.get(\n        `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n    );\n};\n\nexport async function getMovieCredits(movie_id) {\n    return await axios.get(`${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`);\n};\n\nexport async function getMovieReviews(movie_id) {\n    return await axios.get(`${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n};"],"names":["MoviesSearchPage","moviesList","location","useLocation","map","item","to","id","state","from","title","Movies","useState","searchQuery","setSearchQuery","useSearchParams","searchParams","setSearchParams","setMoviesList","query","get","useEffect","getSearchMovies","then","response","data","results","onSubmit","event","preventDefault","trim","toLowerCase","alert","style","padding","width","borderRadius","type","autoComplete","autoFocus","placeholder","name","value","onChange","currentTarget","backgroundColor","border","cursor","API_KEY","BASE_URL","getTrending","axios","titleMovies","getMovieDetails","movie_id","getMovieCredits","getMovieReviews"],"sourceRoot":""}